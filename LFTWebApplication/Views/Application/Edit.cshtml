@model SharedLibrary.Application

@{
    ViewBag.Title = "Edit";
}

    <h2>Application Form.</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ApplicationId)
    @Html.HiddenFor(model => model.ClientId)
    @Html.HiddenFor(model => model.BusinessId)
    @Html.HiddenFor(model => model.LoanId)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.IsDeleted)

    @Html.HiddenFor(model => model.Client.ClientId)
    @Html.HiddenFor(model => model.Business.BusinessId)
    @Html.HiddenFor(model => model.Loan.LoanId)
    @Html.HiddenFor(model => model.Loan.APRRate)
    @Html.HiddenFor(model => model.Loan.CreditScore)

    <div id="TabsSet1">
        <ul>
            <li><a href="#tabs-client">Client</a></li>
            <li><a href="#tabs-business">Business</a></li>
            <li><a href="#tabs-loan">Loan</a></li>
        </ul>
        <div id="tabs-client">
            <div class="form-group">
                @Html.LabelFor(model => model.Client.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Client.FirstName, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Client.LastName, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.DateOfBirth, "Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Client.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.StreetAddress, "Street Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Client.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Client.City, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Client.State,
                     new SelectList(new List<Object>
                     {
                        new { value = "AL", text = "Alabama" },
                        new { value = "AK", text = "Alaska" },
                        new { value = "AZ", text = "Arizona" },
                        new { value = "AR", text = "Arkansas" },
                        new { value = "CA", text = "California" },
                        new { value = "CZ", text = "Canal Zone" },
                        new { value = "CO", text = "Colorado" },
                        new { value = "CT", text = "Connecticut" },
                        new { value = "DE", text = "Delaware" },
                        new { value = "DC", text = "District of Columbia" },
                        new { value = "FL", text = "Florida" },
                        new { value = "GA", text = "Georgia" },
                        new { value = "GU", text = "Guam" },
                        new { value = "HI", text = "Hawaii" },
                        new { value = "ID", text = "Idaho" },
                        new { value = "IL", text = "Illinois" },
                        new { value = "IN", text = "Indiana" },
                        new { value = "IA", text = "Iowa" },
                        new { value = "KS", text = "Kansas" },
                        new { value = "KY", text = "Kentucky" },
                        new { value = "LA", text = "Louisiana" },
                        new { value = "ME", text = "Maine" },
                        new { value = "MD", text = "Maryland" },
                        new { value = "MA", text = "Massachusetts" },
                        new { value = "MI", text = "Michigan" },
                        new { value = "MN", text = "Minnesota" },
                        new { value = "MS", text = "Mississippi" },
                        new { value = "MO", text = "Missouri" },
                        new { value = "MT", text = "Montana" },
                        new { value = "NE", text = "Nebraska" },
                        new { value = "NV", text = "Nevada" },
                        new { value = "NH", text = "New Hampshire" },
                        new { value = "NJ", text = "New Jersey" },
                        new { value = "NM", text = "New Mexico" },
                        new { value = "NY", text = "New York" },
                        new { value = "NC", text = "North Carolina" },
                        new { value = "ND", text = "North Dakota" },
                        new { value = "OH", text = "Ohio" },
                        new { value = "OK", text = "Oklahoma" },
                        new { value = "OR", text = "Oregon" },
                        new { value = "PA", text = "Pennsylvania" },
                        new { value = "PR", text = "Puerto Rico" },
                        new { value = "RI", text = "Rhode Island" },
                        new { value = "SC", text = "South Carolina" },
                        new { value = "SD", text = "South Dakota" },
                        new { value = "TN", text = "Tennessee" },
                        new { value = "TX", text = "Texas" },
                        new { value = "UT", text = "Utah" },
                        new { value = "VT", text = "Vermont" },
                        new { value = "VI", text = "Virgin Islands" },
                        new { value = "VA", text = "Virginia" },
                        new { value = "WA", text = "Washington" },
                        new { value = "WV", text = "West Virginia" },
                        new { value = "WI", text = "Wisconsin" },
                        new { value = "WY", text = "Wyoming" }
                 },
                     "value", "text", Model.Client.State), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.ZipCode, "Zip Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Client.ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = "11111" } })
                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Client.Gender,
                    new SelectList(new List<Object>
                    {
                        new { value = "Male", text = "Male"},
                        new { value = "Female", text = "Female"},
                        new { value = "Other", text = "Other"},
                    },
                    "value", "text", Model.Client.Gender), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.MaritalStatus, "Marital Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.Client.MaritalStatus,
                    new SelectList(new List<Object>
                    {
                        new { value = "Married", text = "Married"},
                        new { value = "Widowed", text = "Widowed"},
                        new { value = "Divorced", text = "Divorced"},
                        new { value = "Separeted", text = "Separeted"},
                        new { value = "Never Married", text = "Never Married"},
                    },
                    "value", "text", Model.Client.MaritalStatus), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.Race, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.Client.Race,
                    new SelectList(new List<Object>
                    {
                        new { value = "White", text = "White"},
                        new { value = "Black or African American", text = "Black or African American"},
                        new { value = "American Indian or Alaska Native", text = "American Indian or Alaska Native"},
                        new { value = "Asian", text = "Asian"},
                        new { value = "Native Hawaiian or Other Pacific Islander", text = "Native Hawaiian or Other Pacific Islander"},
                    },
                    "value", "text", Model.Client.Race), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.CollegeDegree, "College Degree", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.Client.CollegeDegree,
                    new SelectList(new List<Object>
                    {
                        new { value = "Less than high school degree", text = "Less than high school degree"},
                        new { value = "High school degree or equivalen", text = "High school degree or equivalen"},
                        new { value = "Some college but no degree", text = "Some college but no degree"},
                        new { value = "Associate degree", text = "Associate degree"},
                        new { value = "Bachelor degree", text = "Bachelor degree"},
                        new { value = "Graduate degree", text = "Graduate degree"},
                    },
                    "value", "text", Model.Client.CollegeDegree), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Client.EmploymentStatus, "Employment Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Client.EmploymentStatus,
                    new SelectList(new List<Object>
                    {
                        new { value = "Employed", text = "Employed"},
                        new { value = "Not employed", text = "Not employed"},
                        new { value = "Retired", text = "Retired"},
                        new { value = "Disabled, not able to work", text = "Disabled, not able to work"}
                    },
                    "value", "text", Model.Client.EmploymentStatus), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <input type="button" value=">>" class="btn btn-default" onclick="swithTab(1)" />
            </div>
        </div>
        <div id="tabs-business">
            <div class="form-group">
                @Html.LabelFor(model => model.Business.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.Name, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.StreetAddress, "Street Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.City, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Business.State, new { htmlAttributes = new { @class = "form-control" } })*@                    
                    @Html.DropDownListFor(model => model.Business.State,
                    new SelectList(new List<Object>
                    {
                       new { value = "AL", text = "Alabama" },
                       new { value = "AK", text = "Alaska" },
                       new { value = "AZ", text = "Arizona" },
                       new { value = "AR", text = "Arkansas" },
                       new { value = "CA", text = "California" },
                       new { value = "CZ", text = "Canal Zone" },
                       new { value = "CO", text = "Colorado" },
                       new { value = "CT", text = "Connecticut" },
                       new { value = "DE", text = "Delaware" },
                       new { value = "DC", text = "District of Columbia" },
                       new { value = "FL", text = "Florida" },
                       new { value = "GA", text = "Georgia" },
                       new { value = "GU", text = "Guam" },
                       new { value = "HI", text = "Hawaii" },
                       new { value = "ID", text = "Idaho" },
                       new { value = "IL", text = "Illinois" },
                       new { value = "IN", text = "Indiana" },
                       new { value = "IA", text = "Iowa" },
                       new { value = "KS", text = "Kansas" },
                       new { value = "KY", text = "Kentucky" },
                       new { value = "LA", text = "Louisiana" },
                       new { value = "ME", text = "Maine" },
                       new { value = "MD", text = "Maryland" },
                       new { value = "MA", text = "Massachusetts" },
                       new { value = "MI", text = "Michigan" },
                       new { value = "MN", text = "Minnesota" },
                       new { value = "MS", text = "Mississippi" },
                       new { value = "MO", text = "Missouri" },
                       new { value = "MT", text = "Montana" },
                       new { value = "NE", text = "Nebraska" },
                       new { value = "NV", text = "Nevada" },
                       new { value = "NH", text = "New Hampshire" },
                       new { value = "NJ", text = "New Jersey" },
                       new { value = "NM", text = "New Mexico" },
                       new { value = "NY", text = "New York" },
                       new { value = "NC", text = "North Carolina" },
                       new { value = "ND", text = "North Dakota" },
                       new { value = "OH", text = "Ohio" },
                       new { value = "OK", text = "Oklahoma" },
                       new { value = "OR", text = "Oregon" },
                       new { value = "PA", text = "Pennsylvania" },
                       new { value = "PR", text = "Puerto Rico" },
                       new { value = "RI", text = "Rhode Island" },
                       new { value = "SC", text = "South Carolina" },
                       new { value = "SD", text = "South Dakota" },
                       new { value = "TN", text = "Tennessee" },
                       new { value = "TX", text = "Texas" },
                       new { value = "UT", text = "Utah" },
                       new { value = "VT", text = "Vermont" },
                       new { value = "VI", text = "Virgin Islands" },
                       new { value = "VA", text = "Virginia" },
                       new { value = "WA", text = "Washington" },
                       new { value = "WV", text = "West Virginia" },
                       new { value = "WI", text = "Wisconsin" },
                       new { value = "WY", text = "Wyoming" }
                },
                    "value", "text", Model.Business.State), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.ZipCode, "Zip Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder = "11111" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.StartedYear, "Started Year", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.StartedYear, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.IsUnderAnotherLoan, "Is Under Another Loan", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Business.IsUnderAnotherLoan)                        
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.BusinessTaxId, "Business Tax Id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.BusinessTaxId, new { htmlAttributes = new { @class = "form-control", placeholder = "111111111" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Business.EstimatedGrossAnnualRevenue, "Gross Annual Revenue", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Business.EstimatedGrossAnnualRevenue, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>

            <div class="form-group">
                <input type="button" value="<<" class="btn btn-default" onclick="swithTab(0)" />
                <input type="button" value=">>" class="btn btn-default" onclick="swithTab(2)" />
            </div>
        </div>
        <div id="tabs-loan">
            <div class="form-group">
                @Html.LabelFor(model => model.Loan.LoanAmount, "Loan Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Loan.LoanAmount, new { htmlAttributes = new { @class = "form-control" } })                   
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Loan.MonthsToPayBack, "Months To Pay Back", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                    
                    @Html.DropDownListFor(model => model.Loan.MonthsToPayBack,
                    new SelectList(new List<Object>
                    {
                        new { value = "12", text = "12"},
                        new { value = "24", text = "24"},
                        new { value = "36", text = "36"},
                        new { value = "48", text = "48"},
                        new { value = "60", text = "60"},
                    },
                    "value", "text", Model.Loan.MonthsToPayBack), "Please select", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Loan.OutstandingDebt, "Outstanding Debt", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Loan.OutstandingDebt, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default"/>
                </div>
            </div>
            <div class="form-group">
                <input type="button" value="<<" class="btn btn-default" onclick="swithTab(1)" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.FirstName, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.LastName, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.DateOfBirth, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.StreetAddress, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.City, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.State, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.ZipCode, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.Gender, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.MaritalStatus, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.Race, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.CollegeDegree, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Client.EmploymentStatus, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.Name, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.StreetAddress, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.City, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.State, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.ZipCode, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.StartedYear, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.IsUnderAnotherLoan, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.BusinessTaxId, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Business.EstimatedGrossAnnualRevenue, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Loan.LoanAmount, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Loan.MonthsToPayBack, "", new { @class = "text-danger" })</div>
        <div class="col-md-10">@Html.ValidationMessageFor(model => model.Loan.OutstandingDebt, "", new { @class = "text-danger" })</div>
    </div>

</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

<script type="text/javascript">
    $(function () {
        $("#TabsSet1").tabs({
            disabled: [1, 2]
        });
    });

    function swithTab(tabId) {
        if ($("form").valid()) {
            if (tabId == 0) {
                $("#TabsSet1").tabs("enable", tabId);
                $("#TabsSet1").tabs("option", "active", tabId);
                $("#TabsSet1").tabs("option", "disabled", [1, 2]);
            }
            else if (tabId == 1) {
                $("#TabsSet1").tabs("enable", tabId);
                $("#TabsSet1").tabs("option", "active", tabId);
                $("#TabsSet1").tabs("option", "disabled", [0, 2]);
            }
            else if (tabId == 2) {
                $("#TabsSet1").tabs("enable", tabId);
                $("#TabsSet1").tabs("option", "active", tabId);
                $("#TabsSet1").tabs("option", "disabled", [0, 1]);
            }
        }        
    }
</script>